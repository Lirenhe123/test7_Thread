package priv.lirenhe.multithreadprograming;


/**
 * 1,不同线程使用相同对象，该对象可能导致非线程安全，要注意给对象中的变量的全局和局部范围（务必局部变量）
 * 其实是使用该对象中的成员属性，所以对成员属性的存取线程安全还是不安全是根本
 * 2,如果不同线程使用不同对象，就不会出现非线程安全问题
 * 3,在方法上加上synchronized关键字，使方法称为同步方法。（但是这个锁的是对象：其他线程在没有获得锁的情况下是不能使用该对象，自然就不能存取该对象中的成员变量）
 * 4,对象锁的概念：不是锁方法，而是锁对象。其他方法：非synchro则异步，是synchro则同步
 * 5,只有当多线程使用同一对象时才产生线程安全问题，所以synchronized和run的使用的情景要知道
 * @author User
 *
 */
public class _08synchronizedThread01 {

}
